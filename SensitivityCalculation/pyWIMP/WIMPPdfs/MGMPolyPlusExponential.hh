/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef _MGMPolyPlusExponential_hh_
#define _MGMPolyPlusExponential_hh_

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "TMath.h"
 
class MGMPolyPlusExponential : public RooAbsPdf {
public:
  MGMPolyPlusExponential() {} ; 
  MGMPolyPlusExponential(const char *name, const char *title,
	      RooAbsReal& _energy,
	      RooAbsReal& _exp_constant,
	      RooAbsReal& _relative_exp_content);
  MGMPolyPlusExponential(const MGMPolyPlusExponential& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new MGMPolyPlusExponential(*this,newname); }
  inline virtual ~MGMPolyPlusExponential() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* /*rangeName*/) const;
  Double_t analyticalIntegral(Int_t code, const char* rangeName) const;
protected:

  RooRealProxy fEnergy ;
  RooRealProxy fExpConstant ;
  RooRealProxy fExpRelativeContent ;
  
  Double_t evaluate() const ;
  Double_t integralEvaluateAt(Double_t value) const;

private:

  ClassDef(MGMPolyPlusExponential,1) // Your description goes here...
};
 
#endif
