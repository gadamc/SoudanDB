/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef _MGMWimpDiffRatePdf_hh_
#define _MGMWimpDiffRatePdf_hh_

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooAbsReal.h"
#include "MGMVWimpFormFactor.hh"
 
class MGMWimpDiffRatePdf : public RooAbsPdf {
public:
  MGMWimpDiffRatePdf() {} ; 
  MGMWimpDiffRatePdf(const char *name, const char *title,
	      RooAbsReal& _v_sub_0,
	      RooAbsReal& _v_sub_min,
	      RooAbsReal& _v_sub_E,
	      RooAbsReal& _R_sub_0,
	      RooAbsReal& _E_sub_0,
	      RooAbsReal& _r,
              MGMVWimpFormFactor& _form_factor = MGMVWimpFormFactor::DefaultFormFactor());
  MGMWimpDiffRatePdf(const MGMWimpDiffRatePdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new MGMWimpDiffRatePdf(*this,newname); }
  inline virtual ~MGMWimpDiffRatePdf() { }
  virtual ExtendMode extendMode() const { return MustBeExtended; }
  using RooAbsPdf::expectedEvents;
  virtual Double_t expectedEvents(const RooArgSet* nset) const 
    { Double_t temp = getNorm(nset); //cout << temp << endl; 
      return temp;}

protected:

  RooRealProxy v_sub_0 ;
  RooRealProxy v_sub_min ;
  RooRealProxy v_sub_E ;
  RooRealProxy R_sub_0 ;
  RooRealProxy E_sub_0 ;
  RooRealProxy r ;
  RooRealProxy form_factor ;
  Double_t fPrecisionCutOff ;
  
  //! Overload the Evaluate PDF when deriving from this class
  virtual Double_t EvaluatePDF() const;
  virtual Double_t EvaluateFormFactor() const;
  virtual Double_t evaluate() const ;

  virtual Double_t FindPrecisionCutoff();
private:

  ClassDef(MGMWimpDiffRatePdf,1) // Your description goes here...
};
 
#endif
